name: day3-scm-searchapi

on:
  push:
    branches:
      - master
    paths:
      - day3/apps/infrastructure/bicep/search/**
      - day3/apps/dotnetcore/Scm.Search/**
      - .github/workflows/day3-scm-search.yml

  pull_request:
    branches:
      - master
    paths:
      - day3/apps/infrastructure/bicep/search/**
      - day3/apps/dotnetcore/Scm.Search/**
      - .github/workflows/day3-scm-search.yml

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_PACKAGE_PATH: 'publish/scmsearchapi'
      RESIZER_PACKAGE_PATH: 'publish/indexer'
      #NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}
      NEED_DEPLOY: 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Transpile bicep files
        run: az bicep build -f ./day3/apps/infrastructure/bicep/search/search.bicep

      - name: Archive ARM Templates artifacts
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: bicep
          path: ./day3/apps/infrastructure/bicep/search/searchmain.json
          retention-days: 30
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      
      - name: Build and publish SCM Search API
        working-directory: ./day3/apps/dotnetcore/Scm.Search/Adc.Scm.Search.Api
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './${{ env.API_PACKAGE_PATH }}'

      - name: Archive api dotnetcore package artifacts
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: scmsearchapi
          path: './day3/apps/dotnetcore/Scm.Search/Adc.Scm.Search.Api/${{ env.API_PACKAGE_PATH }}/'
          retention-days: 30

      - name: Build and publish SCM SearchIndexer
        working-directory: ./day3/apps/dotnetcore/Scm.Search/Adc.Scm.Search.Indexer
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o './${{ env.RESIZER_PACKAGE_PATH }}'

      - name: Archive SearchIndexer dotnetcore package artifacts
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: indexer
          path: './day3/apps/dotnetcore/Scm.Search/Adc.Scm.Search.Indexer/${{ env.RESIZER_PACKAGE_PATH }}/'
          retention-days: 30

  deploy-to-dev:
    #if: (github.repository == 'azuredevcollege/trainingdays') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    environment: day3-scm-dev
    needs: build
    env:
      RESOURCE_GROUP_NAME: rg-scm-devday3
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: devd3
    
    steps:
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup if it does not exist
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            if $(az group exists --name ${{ env.RESOURCE_GROUP_NAME }}) ; then
              echo "Azure resource group already exists, skipping creation..."
            else
              az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.RESOURCE_GROUP_LOCATION }}
              echo "Azure resource group created"
            fi

      - name: Download bicep artifacts
        uses: actions/download-artifact@v2
        with:
          name: bicep

      - name: Deploy infrastructure to dev environment
        uses: azure/arm-deploy@v1
        id: infrastructure
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./searchmain.json
          parameters: env=${{ env.ENV_NAME }}

      - name: Download scmsearchapi artifacts
        uses: actions/download-artifact@v2
        with:
          name: scmsearchapi
          path: ./scmsearchapi

      - name: Deploy SCM Search API
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.infrastructure.outputs.searchApiWebAppName }}
          package: ./scmresourcesapi

      - name: Download SearchIndexer artifacts
        uses: actions/download-artifact@v2
        with:
          name: indexer
          path: ./indexer

      - name: Deploy ImageResizer Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ steps.infrastructure.outputs.indexerFunctionName }}
          package: ./indexer

  deploy-to-test:
    #if: (github.repository == 'azuredevcollege/trainingdays') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    environment: day3-scm-test
    needs: deploy-to-dev
    env:
      RESOURCE_GROUP_NAME: rg-scm-testday3
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: testd3
    
    steps:
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup if it does not exist
        uses: Azure/CLI@v1
        with:
          inlineScript: |
            #!/bin/bash
            if $(az group exists --name ${{ env.RESOURCE_GROUP_NAME }}) ; then
              echo "Azure resource group already exists, skipping creation..."
            else
              az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.RESOURCE_GROUP_LOCATION }}
              echo "Azure resource group created"
            fi

      - name: Download bicep artifacts
        uses: actions/download-artifact@v2
        with:
          name: bicep

      - name: Deploy infrastructure to dev environment
        uses: azure/arm-deploy@v1
        id: infrastructure
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./searchmain.json
          parameters: env=${{ env.ENV_NAME }}

      - name: Download scmsearchapi artifacts
        uses: actions/download-artifact@v2
        with:
          name: scmsearchapi
          path: ./scmsearchapi

      - name: Deploy SCM Search API
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.infrastructure.outputs.searchApiWebAppName }}
          package: ./scmresourcesapi

      - name: Download SearchIndexer artifacts
        uses: actions/download-artifact@v2
        with:
          name: indexer
          path: ./indexer

      - name: Deploy ImageResizer Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ steps.infrastructure.outputs.indexerFunctionName }}
          package: ./indexer